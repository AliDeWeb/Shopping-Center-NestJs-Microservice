services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: 12345678
      POSTGRES_USER: root
      POSTGRES_DB: shopping_center
    networks:
      - shop-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d shopping_center"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s

  rabbitmq:
    image: rabbitmq:4.1.1-management-alpine
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: 12345678
    configs:
      - source: rabbitmq-plugins
        target: /etc/rabbitmq/enabled_plugins
    volumes:
      - rabbitmq-lib:/var/lib/rabbitmq/
      - rabbitmq-log:/var/log/rabbitmq
    networks:
      - shop-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  users:
    build: "./users"
    container_name: users-service
    restart: always
    environment:
      - NODE_ENV=dev
      - DB_POSTGRES_HOST=postgres
      - DB_POSTGRES_PORT=5432
      - DB_POSTGRES_PASSWORD=12345678
      - DB_POSTGRES_USER=root
      - DB_POSTGRES_DB=shopping_center
      - RABBITMQ_URLS=amqp://root:12345678@rabbitmq:5672
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - shop-network

  gateway:
    build: "./gateway"
    container_name: gateway-service
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=dev
      - CLIENTS=localhost:3000
      - RABBITMQ_URLS=amqp://root:12345678@rabbitmq:5672
    depends_on:
      users:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - shop-network

configs:
  rabbitmq-plugins:
    content: "[rabbitmq_management]."

volumes:
  rabbitmq-lib:
    driver: local
  rabbitmq-log:
    driver: local
  postgres-data:
    driver: local

networks:
  shop-network:
    driver: bridge
